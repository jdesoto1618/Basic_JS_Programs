// This program will have the user try to guess a pseudo-random number generated by the computer in 7 tries or less.
// Initialize global variables
var user_guess;
var attempts = 1;
var counter = 7;
function secret() {
  //Used +1 at the end of this due to the nature of floor. We want this to reach 100, and it won't without the +1. An alternate way to accomplish this is to do *101.
  var comp_num = Math.floor(Math.random()*100)+1;
  var name = prompt("Type in your name to play!");

  // Empty prompt. Loop breaks when the user enters something.
  while (name === '') {
    alert("Gotta enter your name to play. Try again!")
    name = prompt("Type in your name to play!");
  }

  //Show computer number until program is complete
  // console.log(comp_num);

  // Do-while loop. Do block runs before checking while condition.
  do {
    //Account for multiple input types such as string and undefined. Note that isNaN does not detect empty string.
    user_guess = prompt(name + ", choose a number between 1 and 100. You have " + counter +  " tries to guess the number!");
    while (isNaN(user_guess)) {
      alert("Da Fuq? You call that a number??")
      user_guess = prompt(name + " , choose a number between 1 and 100. You have " + counter +  " tries to guess the number!");
    }

    //Account for empty guess/prompt
    while (user_guess === '') {
      alert('Please type a number to play! You still have ' + counter + ' turns left.')
      user_guess = prompt(name + " , choose a number between 1 and 100. You have " + counter +  " tries to guess the number!");
    }

    attempts += 1;
    counter -= 1;
    if (user_guess > comp_num) {
    alert("Your guess was too high! You have " + counter + " tries left!");
  } else if (user_guess < comp_num) {
    alert("Your guess was too low...You have " + counter + " tries left!");
  } else if (parseInt(user_guess) == comp_num) {
    if (counter >=1) {
      alert("Congrats, " + name + "! You guessed the computer's number! You finished the game with " + counter + " tries left!");
      // alert("You finished the game with " + counter + " tries left!");
    } else {
      alert("Congrats, you win!! You guessed the number on your last try!");
    } //ends nested if/else
  } //ends if
} while (user_guess != comp_num && (attempts <= 7)) //this will run the above code until this while condition becomes false. When the user picks a number that isn't the same as the computer number, the while condition is true, thereby running the loop again.
  //Resets counter at the end of a game. Also set up to allow the user to play again.
  counter = 7;
  var replay = prompt('Do you want to try again??');

  //Replay is left empty.
  while (replay == '') {
    alert('Please choose whether to play again or not. Type yes to play again, or no to quit.')
    replay = prompt('Do you want to try again??');
  }

  //Need regex to handle all other input cases for replay except for those in the switch.
  switch (replay.toLowerCase()) {
    case 'y':
    case 'yes':
    case 'sure':
    case 'yeah':
    case 'ok':
    case '1':
    secret();
    break;
    default:
    alert("Thank you for playing!!!");
  } //ends switch
} //ends secret function
